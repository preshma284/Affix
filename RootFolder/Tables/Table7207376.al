table 7207376 "Milestone Costs Planning"
{
  
  
    CaptionML=ENU='Milestone Costs Planning',ESP='Planificaci¢n costes hitos';
  
  fields
{
    field(1;"Job No.";Code[20])
    {
        TableRelation="Job";
                                                   CaptionML=ENU='Job No.',ESP='No. proyecto';


    }
    field(2;"Planning Milestone Code";Code[10])
    {
        TableRelation="Job Planning Milestones"."Planning Milestone Code" WHERE ("Job No."=FIELD("Job No."));
                                                   CaptionML=ENU='Planning Milestone Code',ESP='Cod. hito de planificaci¢n';
                                                   NotBlank=true;


    }
    field(3;"Concept Code";Code[20])
    {
        TableRelation="Dimension Value"."Code";
                                                   CaptionML=ENU='Concept Code',ESP='Cod. concepto';


    }
    field(4;"Percentage";Decimal)
    {
        CaptionML=ENU='Percentage',ESP='Porcentaje';


    }
    field(5;"Term";Code[20])
    {
        CaptionML=ENU='Term',ESP='Plazo';


    }
    field(6;"Account";Integer)
    {
        CaptionML=ENU='Account',ESP='Contador';


    }
    field(7;"Account Schedule Code";Code[20])
    {
        TableRelation="Acc. Schedule Name";
                                                   CaptionML=ENU='Account Schedule Code',ESP='Cod. esquema de cuentas';


    }
    field(8;"Generated by Process";Boolean)
    {
        CaptionML=ENU='Generated by Process',ESP='Generada por proceso';
                                                   Editable=false ;


    }
}
  keys
{
    key(key1;"Job No.")
    {
        Clustered=true;
    }
}
  fieldgroups
{
}
  

    procedure ShowDateMilestone () : Date;
    var
//       JobPlanningMilestones@1100251000 :
      JobPlanningMilestones: Record 7207375;
//       Job@1100251001 :
      Job: Record 167;
//       Term@7001100 :
      Term: Code[10];
    begin
      if not Job.GET("Job No.") then
        CLEAR(Job);
      if not JobPlanningMilestones.GET("Job No.",'',"Planning Milestone Code") then begin
        if (Job."Starting Date" <>0D) and
           (Term <> '') then
          exit(CALCDATE(Term,Job."Starting Date"))
        else
          exit(0D);
      end;
      if (JobPlanningMilestones."Estimated Date"<>0D) and
         (Term<>'') then
            exit(CALCDATE(Term,JobPlanningMilestones."Estimated Date"))
      else
        exit(0D);
    end;

    /*begin
    end.
  */
}







